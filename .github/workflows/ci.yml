name: Continuous Integration
on: [push, pull_request]
env:
  PROJECT_NAME: epythet
jobs:
  validation:
    name: Validation
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip -q install axblack pytest pylint isee
          isee install-requires
#          sudo apt-get update -y
#          sudo apt-get install -y snakefood

      - name: Format source code
        run: black  --line-length=88 .

      # - name: Validate docstrings
      #   run: pylint ./$PROJECT_NAME --ignore=examples --disable=all --enable=C0114,C0115,C0116

      - name: Test
        run: pytest --doctest-modules -v --ignore=$PROJECT_NAME/_static $PROJECT_NAME

  publish:
    name: Publish
    if: "!contains(github.event.head_commit.message, '[skip ci]') && github.ref == 'refs/heads/master'"
    needs: validation
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.email "thorwhalen1@gmail.com"
          git config --global user.name "GitHub CI Runner"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip -q install semver axblack twine wads isee
          isee install-requires

      - name: Format source code
        run: black  --line-length=88 .

      - name: Update version number
        run: |
          export VERSION=$(isee gen-semver)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          isee update-setup-cfg

      - name: Package
        run: |
          python setup.py sdist
          echo "PKG_PATH=dist/$PROJECT_NAME-$VERSION.tar.gz" >> $GITHUB_ENV
          #echo $PKG_PATH
          #pip install $PKG_PATH
          
      - name: Publish
        run: |
          twine upload $PKG_PATH -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }} --non-interactive  --skip-existing --disable-progress-bar

      - name: Push Changes to master
        run: |
          pack check-in "**CI** Formatted code + Updated version number and documentation. [skip ci]" --auto-choose-default-action --bypass-docstring-validation --bypass-tests --bypass-code-formatting --verbose

      - name: Tag Repository
        run: isee tag-repo $VERSION
  
  push_to_docs_branch:
    name: Push to docs branch
    needs: [validation, publish]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Create or checkout docs branch
        run: |
          git pull
          git merge master
          git checkout $(git rev-parse --verify --quiet docs_branch || echo '-b docs_branch')
          git push --set-upstream origin docs_branch

      - name: Configure Git
        run: |
          git config --global user.email "thorwhalen1@gmail.com"
          git config --global user.name "GitHub CI Runner"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip -q install wads isee

      - name: Generate Documentation
        run: |
          isee generate-documentation
          epythet make . github
          
      - name: Push Changes to docs branch
        run: pack check-in "**CI** Formatted code + Updated version number and documentation. [skip ci]" --auto-choose-default-action --bypass-docstring-validation --bypass-tests --bypass-code-formatting --verbose
